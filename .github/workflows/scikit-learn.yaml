name: build scikit-learn wheel

on:
  schedule:
    - cron: '0 17 * * *' 
  workflow_dispatch:
    inputs:
      version:
        required: false
        default: 'latest'

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  build_wheels:
    name: Build wheel for cp${{ matrix.python }}-${{ matrix.platform }}-loongarch64
    runs-on: ${{ matrix.os }}

    defaults:
      run:
        shell: bash -el {0}

    strategy:
      fail-fast: false
      matrix:
        os: [loongarch64-abi2.0]
        platform: ["manylinux"]
        python: ["39", "310", "311", "312", "313"]

    steps:
      - name: Check if exists
        run: |
          pkg=scikit-learn

          if [[ "${{ github.event_name }}" == "schedule" ]]; then
            version="latest"
          else
            version="${{ github.event.inputs.version }}"
          fi

          platform="${{ matrix.platform }}"
          python_tag="${{ matrix.python }}"
          repo="${pkg}/${pkg}"
          url="https://lpypi.loongnix.cn/loongson/pypi/+simple/${pkg}/"
          upstream_url="https://api.github.com/repos/${repo}/releases/latest"

          if [[ "${version}" == "latest" ]]; then
            version="$(curl -s "${upstream_url}" | jq -r ".tag_name")"
          fi

          if curl -s ${url} | grep $(echo ${version} | cut -d 'v' -f2) | grep ${platform} | grep -q ${python_tag}; then
            echo "SKIP=true" >> $GITHUB_ENV
            echo "${pkg}-${version}-${python_tag}-${platform} wheel already exists."
          else
            echo "SKIP=false" >> $GITHUB_ENV
            echo "${pkg}-${version}-${python_tag}-${platform} wheel not found, continue building."
          fi

          echo "VERSION=${version}" >> $GITHUB_ENV
          echo "REPO=${repo}" >> $GITHUB_ENV

      - name: Clean workspace
        if: ${{ env.SKIP != 'true' }}
        run: |
          safe-rm -rf * .*

      - name: Download source
        if: ${{ env.SKIP != 'true' }}
        uses: actions/checkout@v4
        with:
          repository: ${{ env.REPO }}
          ref: ${{ env.VERSION }}

      - name: Patch source
        if: ${{ env.SKIP != 'true' }}
        run: |
          sed -i '/pip install cibuildwheel/d' build_tools/wheels/build_wheels.sh

      - name: Build wheel
        if: ${{ env.SKIP != 'true' }}
        env:
          RUNNER_OS: Linux
          PIP_INDEX_URL: "https://lpypi.loongnix.cn/loongson/pypi/+simple"
          PIP_EXTRA_INDEX_URL: "https://pypi.tuna.tsinghua.edu.cn/simple"
          CIBW_PRERELEASE_PYTHONS: ${{ matrix.prerelease_pythons }}
          CIBW_FREE_THREADED_SUPPORT: ${{ matrix.free_threaded_support }}
          CIBW_ENVIRONMENT_LINUX: SKLEARN_SKIP_NETWORK_TESTS=1
          CIBW_BUILD: cp${{ matrix.python }}-${{ matrix.platform }}_loongarch64
          CIBW_ARCHS: loongarch64
          CIBW_BEFORE_BUILD: bash {project}/build_tools/wheels/cibw_before_build.sh {project}
          CIBW_ENVIRONMENT_PASS_LINUX: |
            RUNNER_OS
            PIP_INDEX_URL
            PIP_EXTRA_INDEX_URL
          CIBW_BUILD_VERBOSITY: 1
          CIBW_TEST_SKIP: "*"
        run: build_tools/wheels/build_wheels.sh

      - name: Upload wheels
        if: ${{ env.SKIP != 'true' }}
        run: |
          ls wheelhouse/*-${{ matrix.platform }}_*.whl || exit 1
          twine upload --repository-url https://lpypi.loongnix.cn/loongson/pypi wheelhouse/*-${{ matrix.platform }}_*.whl
        env:
          TWINE_USERNAME: ${{ secrets.INDEX_NAME  }}
          TWINE_PASSWORD: ${{ secrets.INDEX_TOKEN }}





