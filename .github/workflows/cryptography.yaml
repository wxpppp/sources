name: build cryptography wheel

on:
  schedule:
    - cron: '0 17 * * *'
  workflow_dispatch:
    inputs:
      version:
        required: false
        default: 'latest'

jobs:
  build:
    name: Build cryptography ${{ matrix.platform }} wheel on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [loongarch64-abi2.0]
        platform: ["manylinux", "musllinux"]
        PYTHON:
          - { VERSION: "cp311", ABI_VERSION: 'py37' }
          - { VERSION: "cp311", ABI_VERSION: 'py39' }
    steps:
      - name: Check if exists
        run: |
          pkg=cryptography

          if [[ "${{ github.event_name }}" == "schedule" ]]; then
            version="latest"
          else
            version="${{ github.event.inputs.version }}"
          fi

          platform="${{ matrix.platform }}"
          abi_version="${{ matrix.PYTHON.ABI_VERSION }}"
          url="https://lpypi.loongnix.cn/loongson/pypi/+simple/${pkg}/"
          upstream_url="https://pypi.org/pypi/${pkg}/json"

          if [[ "${abi_version}" == "py37" ]]; then
            abi_version=cp37
          else
            abi_version=cp39
          fi

          if [[ "${version}" == "latest" ]]; then
            version="$(curl -s ${upstream_url} | jq -r '.info.version')"
          fi


          if curl -s ${url} | grep -q ${pkg}-${version}-${abi_version}.*${platform}.*loongarch64; then
            echo "SKIP=true" >> $GITHUB_ENV
            echo "${platform} wheels already exists."
          else
            echo "SKIP=false" >> $GITHUB_ENV
            echo "${platform} wheels not found, continue building"
          fi

          echo "VERSION=${version}" >> $GITHUB_ENV

      - name: Clean workspace
        if: ${{ env.SKIP != 'true' }}
        run: |
          safe-rm -rf * .*

      - name: Download source
        if: ${{ env.SKIP != 'true' }}
        uses: wxpppp/sources@main
        with:
          name: cryptography
          version: ${{ env.VERSION }}

      - name: Build wheel
        if: ${{ env.SKIP != 'true' }}
        run: |
          pip3 install -i https://lpypi.loongnix.cn/loongson/pypi/+simple cibuildwheel==2.22.0
          cibuildwheel
        env:
          PIP_EXTRA_INDEX_URL: "https://lpypi.loongnix.cn/loongson/pypi/+simple"
          PIP_INDEX_URL: "https://pypi.tuna.tsinghua.edu.cn/simple"
          CIBW_ARCHS: "loongarch64"
          CIBW_BUILD: "${{ matrix.PYTHON.VERSION }}-*"
          CIBW_BUILD_FRONTEND: "build[uv]"
          CIBW_CONFIG_SETTINGS: "build-args=--features=pyo3/abi3-${{ matrix.PYTHON.ABI_VERSION }}"
          CIBW_ENVIRONMENT_LINUX: >
            OPENSSL_DIR="/opt/pyca/cryptography/openssl"
            OPENSSL_STATIC=1
            RUSTUP_HOME="/root/.rustup"
          CIBW_ENVIRONMENT_PASS_LINUX: >
            PIP_INDEX_URL
            PIP_EXTRA_INDEX_URL
          CIBW_MANYLINUX_LOONGARCH64_IMAGE: "ghcr.io/loong64/cryptography-manylinux_2_38:loongarch64"
          CIBW_MUSLLINUX_LOONGARCH64_IMAGE: "ghcr.io/loong64/cryptography-musllinux_1_2:loongarch64"

      - name: Upload wheels
        if: ${{ env.SKIP != 'true' }}
        run: |
          ls wheelhouse/*-${{ matrix.platform }}_*.whl || exit 1
          twine upload --repository-url https://lpypi.loongnix.cn/loongson/pypi wheelhouse/*-${{ matrix.platform }}_*.whl
        env:
          TWINE_USERNAME: ${{ secrets.INDEX_NAME  }}
          TWINE_PASSWORD: ${{ secrets.INDEX_TOKEN }}
