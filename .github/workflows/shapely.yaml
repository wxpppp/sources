name: build shapely wheel

on:
  schedule:
    - cron: '0 17 * * *'
  workflow_dispatch:
    inputs:
      version:
        required: false
        default: 'latest'

env:
  PACKAGE: shapely
  GEOS_VERSION: "3.13.1"

jobs:
  check-wheel-exists:
    name: Check if exists
    runs-on: loongarch64-abi2.0
    outputs:
      version: ${{ steps.check.outputs.version }}
      build: ${{ steps.check.outputs.build }}
    steps:

      - name: Check if wheels exist
        id: check
        run: |
          pkg=${{ env.PACKAGE }}

          if [[ "${{ github.event_name }}" == "schedule" ]]; then
            version="latest"
          else
            version="${{ github.event.inputs.version }}"
          fi

          url="https://lpypi.loongnix.cn/loongson/pypi/+simple/${pkg}/"
          upstream_url="https://pypi.org/pypi/${pkg}/json"
          if [[ "${version}" == "latest" ]]; then
            version="$(curl -s ${upstream_url} | jq -r '.info.version')"
          fi
          echo "version=${version}" >> $GITHUB_OUTPUT

          if curl -Ls "${url}" | grep -q "${pkg}-${version}.*whl"; then
            echo "build=false" >> $GITHUB_OUTPUT
          else
            echo "build=true" >> $GITHUB_OUTPUT
            safe-rm -rf * .*
          fi


  build:
    name: Build shapely ${{ matrix.baseimage }} wheel on ${{ matrix.os }}
    needs: check-wheel-exists
    if: needs.check-wheel-exists.outputs.build == 'true'
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: loongarch64-abi2.0
            baseimage: manylinux_2_38_loongarch64
            cibw_build: "*manylinux_loongarch64"
            arch: loongarch64
          - os: loongarch64-abi2.0
            baseimage: musllinux_1_2_loongarch64
            cibw_build: "*musllinux_loongarch64"
            arch: loongarch64
    env:
      version: ${{ needs.check-wheel-exists.outputs.version }}
      basetag: latest

    steps:

      - name: Checkout source
        uses: actions/checkout@v4
        with:
          repository: shapely/shapely
          ref: ${{ env.version }}
          fetch-depth: 0

      - name: Build Docker image with GEOS
        run: |
          docker build \
          --build-arg BASEIMAGE=lcr.loongnix.cn/pypa/${{ matrix.baseimage }}:${{ env.basetag }} \
          --build-arg GEOS_VERSION=${{ env.GEOS_VERSION }} \
          --build-arg https_proxy=${{ secrets.PROXY_URL }} \
          --tag ${{ matrix.baseimage }}_geos:${{ env.GEOS_VERSION }} \
          --file ci/Dockerfile \
          .

      - name: Add GEOS LICENSE
        run: cp ci/wheelbuilder/LICENSE_GEOS .
        shell: bash

      - name: Build wheels
        run: cibuildwheel
        env:
          PIP_EXTRA_INDEX_URL: "https://lpypi.loongnix.cn/loongson/pypi/+simple"
          PIP_INDEX_URL: "https://pypi.tuna.tsinghua.edu.cn/simple"
          CIBW_ARCHS: ${{ matrix.arch }}
          CIBW_BEFORE_ALL: |
            if command -v yum &> /dev/null; then
              cp -r /usr/local/lib64/* /usr/lib64/
            fi
          CIBW_BUILD_FRONTEND: "pip; args: --no-build-isolation"
          CIBW_BEFORE_BUILD: |
            # For free threading support in Cython install a pre-release version of Cython
            python -c "import sysconfig, subprocess; subprocess.check_call(['pip', 'install', '--pre', 'cython'] if sysconfig.get_config_var('Py_GIL_DISABLED') else ['pip', 'install', 'cython'])" &&
            pip install numpy setuptools wheel
          CIBW_BUILD: ${{ matrix.cibw_build }}
          CIBW_MANYLINUX_LOONGARCH64_IMAGE: ${{ matrix.baseimage }}_geos:${{ env.GEOS_VERSION }}
          CIBW_MUSLLINUX_LOONGARCH64_IMAGE: ${{ matrix.baseimage }}_geos:${{ env.GEOS_VERSION }}
          CIBW_ENVIRONMENT_PASS_LINUX: >
            PIP_INDEX_URL
            PIP_EXTRA_INDEX_URL

  upload:
    name: Upload wheels
    needs: [check-wheel-exists, build]
    runs-on: ${{ matrix.os }}
    env:
      version: ${{ needs.check-wheel-exists.outputs.version }}
      TWINE_USERNAME: ${{ secrets.INDEX_NAME  }}
      TWINE_PASSWORD: ${{ secrets.INDEX_TOKEN }}
    strategy:
      fail-fast: false
      matrix:
        os: [loongarch64-abi2.0]
    steps:
      - name: Upload wheels
        run: |
          ls wheelhouse/${{ env.PACKAGE }}-${{ env.version }}*.whl || exit 1
          twine upload --repository-url https://lpypi.loongnix.cn/loongson/pypi wheelhouse/${{ env.PACKAGE }}-${{ env.version }}*.whl
