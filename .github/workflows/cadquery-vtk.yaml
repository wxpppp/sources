name: build cadquery-vtk wheel

on:
  schedule:
    - cron: '0 17 * * *'
  workflow_dispatch:
    inputs:
      version:
        required: false
        default: 'latest'
env:
  PKG_NAME: cadquery_vtk
jobs:
  build:
    name: Build cadquery_vtk cp313 ${{ matrix.platform }} wheel on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [loongarch64-abi2.0]
        platform: ["manylinux"]
        image: ["ghcr.io/loongson-cloud-community/cadquery-vtk-py313-build-base"]
    steps:
      - name: Check if exists
        run: |
          pkg=${{ env.PKG_NAME }}
          python_tag=${{ matrix.python }}

          if [[ "${{ github.event_name }}" == "schedule" ]]; then
            version="latest"
          else
            version="${{ github.event.inputs.version }}"
          fi

          platform="${{ matrix.platform }}"
          url="https://lpypi.loongnix.cn/loongson/pypi/+simple/${pkg}/"
          upstream_url="https://pypi.org/pypi/${pkg}/json"

          if [[ "${version}" == "latest" ]]; then
            version="$(curl -s ${upstream_url} | jq -r '.info.version')"
          fi

          if curl -Ls ${url} | grep -q ${pkg}-${version}-.*${platform}.*loongarch64; then
            echo "SKIP=true" >> $GITHUB_ENV
            echo "${platform} wheels already exists."
          else
            echo "SKIP=false" >> $GITHUB_ENV
            echo "${platform} wheels not found, continue building"
          fi

          echo "VTK=${version}" >> $GITHUB_ENV

          vtk_major=$(echo "${version}" | awk -F. '{print $1"."$2}')
          echo "VTK_MAJOR=${vtk_major}" >> $GITHUB_ENV

      - name: Clean workspace
        if: ${{ env.SKIP != 'true' }}
        run: |
          safe-rm -rf * .*

      - name: Download source
        if: ${{ env.SKIP != 'true' }}
        uses: actions/checkout@v4
        with:
          repository: Loongson-Cloud-Community/ocp-build-system
          ref: dev

      - name: Build wheel
        if: ${{ env.SKIP != 'true' }}
        run: |
          docker run --rm \
          --volume "$(pwd):/io" \
          --env VTK=${{ env.VTK }} \
          --env VTK_MAJOR=${{ env.VTK_MAJOR }} \
          --env HTTPS_PROXY=${{ secrets.PROXY_URL }} \
          --env HTTP_PROXY=${{ secrets.PROXY_URL }} \
          --workdir /io \
          ${{ matrix.image }}:${{ env.VTK }} \
          bash -c "chmod +x build-cadquery-vtk-wheel.sh && ./build-cadquery-vtk-wheel.sh"
          
      - name: Upload wheels
        if: ${{ env.SKIP != 'true' }}
        run: |
          ls ocp-build-system/VTK-9.3.1/build/dist/*-${{ matrix.platform }}_*.whl || exit 1
          twine upload --repository-url https://lpypi.loongnix.cn/loongson/pypi ocp-build-system/VTK-9.3.1/build/dist/*-${{ matrix.platform }}_*.whl
        env:
          TWINE_USERNAME: ${{ secrets.INDEX_NAME }}
          TWINE_PASSWORD: ${{ secrets.INDEX_TOKEN }}
