name: build pymupdf wheel

on:
  schedule:
    - cron: '0 17 * * *'
  workflow_dispatch:
    inputs:
      version:
        required: false
        default: 'latest'
env:
  PACKAGE: pymupdf
jobs:
  build:
    name: Build pymupdf ${{ matrix.platform }} wheel on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [loongarch64-abi2.0]
        platform: ["manylinux"]
    steps:
      - name: Check if exists
        run: |
          pkg=${{ env.PACKAGE }}
          python_tag=${{ matrix.python }}

          if [[ "${{ github.event_name }}" == "schedule" ]]; then
            version="latest"
          else
            version="${{ github.event.inputs.version }}"
          fi

          platform="${{ matrix.platform }}"
          url="https://lpypi.loongnix.cn/loongson/pypi/+simple/${pkg}/"
          upstream_url="https://pypi.org/pypi/${pkg}/json"

          if [[ "${version}" == "latest" ]]; then
            version="$(curl -s ${upstream_url} | jq -r '.info.version')"
          fi

          if curl -Ls ${url} | grep -q ${pkg}-${version}.*-${platform}.*loongarch64; then
            echo "SKIP=true" >> $GITHUB_ENV
            echo "${platform} wheels already exists."
          else
            echo "SKIP=false" >> $GITHUB_ENV
            echo "${platform} wheels not found, continue building"
          fi

          echo "VERSION=${version}" >> $GITHUB_ENV

      - name: Clean workspace
        if: ${{ env.SKIP != 'true' }}
        run: |
          safe-rm -rf * .*

      - name: Download source
        if: ${{ env.SKIP != 'true' }}
        uses: actions/checkout@v4
        with:
          repository: pymupdf/PyMuPDF
          ref: ${{ env.VERSION }}

      - name: Patch source
        if: ${{ env.SKIP != 'true' }}
        run: |
          wget -qO - https://raw.githubusercontent.com/Loongson-Cloud-Community/PyMuPDF/refs/heads/dev/gh-release-add-loong64-support.patch | patch -p1
          sed -i "s/pip install cibuildwheel/pip install cibuildwheel==3.0.0/g" scripts/gh_release.py

      - name: Build wheel
        if: ${{ env.SKIP != 'true' }}
        run: |
          python scripts/gh_release.py
        env:
          HTTPS_PROXY: ${{ secrets.PROXY_URL }}
          PIP_INDEX_URL: "https://lpypi.loongnix.cn/loongson/pypi/+simple"
          inputs_wheels_cps: cp39*
          inputs_wheels_linux_loongarch64: 1

      - name: Upload wheels
        if: ${{ env.SKIP != 'true' }}
        run: |
          ls wheelhouse/*-${{ matrix.platform }}_*.whl || exit 1
          twine upload --repository-url https://lpypi.loongnix.cn/loongson/pypi wheelhouse/*-${{ matrix.platform }}_*.whl
        env:
          TWINE_USERNAME: ${{ secrets.INDEX_NAME }}
          TWINE_PASSWORD: ${{ secrets.INDEX_TOKEN }}
