name: build onnxruntime wheel

on:
  schedule:
    - cron: '0 2 * * *'
  workflow_dispatch:
    inputs:
      version:
        required: false
        default: 'latest'
env:
  PACKAGE: onnxruntime
jobs:
  build:
    name: Build onnxruntime ${{ matrix.python }} ${{ matrix.platform }} wheel on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [loongarch64-abi2.0]
        python: ["cp310", "cp311", "cp312", "cp313"]
        platform: ["manylinux"]
    steps:
      - name: Check if exists
        run: |
          pkg=${{ env.PACKAGE }}

          if [[ "${{ github.event_name }}" == "schedule" ]]; then
            version="latest"
          else
            version="${{ github.event.inputs.version }}"
          fi

          python_tag="${{ matrix.python }}"
          platform="${{ matrix.platform }}"
          url="https://lpypi.loongnix.cn/loongson/pypi/+simple/${pkg}/"
          upstream_url="https://api.github.com/repos/microsoft/${pkg}/releases/latest"

          if [[ "${version}" == "latest" ]]; then
            version="$(curl -s ${upstream_url} | jq -r '.tag_name')"
          fi

          if curl -Ls ${url} | grep -q ${pkg}-${version#v}-.*${python_tag}-${platform}.*loongarch64; then
            echo "SKIP=true" >> $GITHUB_ENV
            echo "${platform} wheels already exists."
          else
            echo "SKIP=false" >> $GITHUB_ENV
            echo "${platform} wheels not found, continue building"
          fi

          echo "VERSION=${version}" >> $GITHUB_ENV

      - name: Clean workspace
        if: ${{ env.SKIP != 'true' }}
        run: |
          safe-rm -rf * .*

      - name: Download source
        if: ${{ env.SKIP != 'true' }}
        uses: actions/checkout@v4
        with:
          repository: microsoft/${{ env.PACKAGE }}
          ref: ${{ env.VERSION }}
          submodules: true

      - name: Set permissions
        if: ${{ env.SKIP != 'true' }}
        run: |
          mkdir -p wheelhouse build
          chmod 777 wheelhouse build

      - name: Patch source
        if: ${{ env.SKIP != 'true' }}
        run: |
          wget -qO - https://github.com/loong64/onnxruntime/raw/refs/heads/main/fix_strict_aliasing_quantize.patch | patch -p1
          wget -qO cmake/vcpkg-ports/cpuinfo/cpuinfo_loong64.patch https://github.com/loong64/pytorch/raw/refs/heads/main/cpuinfo/cpuinfo_loong64.patch
        env:
          HTTPS_PROXY: ${{ secrets.PROXY_URL }}

      - name: Build wheel
        if: ${{ env.SKIP != 'true' }}
        run: |
          docker run --rm \
            --volume $(pwd):/onnxruntime_src \
            --workdir /onnxruntime_src \
            --env ALLOW_RELEASED_ONNX_OPSET_ONLY=0 \
            --env https_proxy=${{ secrets.PROXY_URL }} \
            ghcr.io/loong64/onnxruntimecpubuildpythonloongarch64:${{ env.VERSION }} \
            /bin/bash -c 'PATH=/opt/python/${{ matrix.python }}-${{ matrix.python }}/bin:$PATH && python3 -m pip install --user -r tools/ci_build/github/linux/python/requirements.txt && python3 tools/ci_build/build.py --build_dir build/Release --config Release --cmake_generator Ninja --skip_submodule_sync --skip_tests --build_shared_lib --parallel --use_cache --use_vcpkg --use_vcpkg_ms_internal_asset_cache --use_binskim_compliant_compile_flags --build_wheel --cmake_extra_defines onnxruntime_BUILD_BENCHMARKS=ON && auditwheel repair -w wheelhouse build/Release/Release/dist/*.whl'

      - name: Upload wheels
        if: ${{ env.SKIP != 'true' }}
        run: |
          ls wheelhouse/*-${{ matrix.python }}-${{ matrix.platform }}_*.whl || exit 1
          twine upload --repository-url https://lpypi.loongnix.cn/loongson/pypi wheelhouse/*-${{ matrix.python }}-${{ matrix.platform }}_*.whl
        env:
          TWINE_USERNAME: ${{ secrets.INDEX_NAME  }}
          TWINE_PASSWORD: ${{ secrets.INDEX_TOKEN }}
