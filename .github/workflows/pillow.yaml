name: build pillow wheel

on:
  schedule:
    - cron: '0 17 * * *'
  workflow_dispatch:
    inputs:
      version:
        required: false
        default: 'latest'

jobs:
  build:
    name: Build pillow ${{ matrix.platform }} wheel on loongarch64
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [loongarch64-abi2.0]
        platform: ["manylinux", "musllinux"]
    steps:
      - name: Check if exists
        run: |
          pkg=pillow

          if [[ "${{ github.event_name }}" == "schedule" ]]; then
            version="latest"
          else
            version="${{ github.event.inputs.version }}"
          fi

          platform="${{ matrix.platform }}"
          url="https://lpypi.loongnix.cn/loongson/pypi/+simple/${pkg}/"
          upstream_url="https://pypi.org/pypi/${pkg}/json"

          if [[ "${version}" == "latest" ]]; then
            version="$(curl -s ${upstream_url} | jq -r '.info.version')"
          fi

          if curl -s ${url} | grep ${version} | grep -q ${platform}.*loongarch64; then
            echo "SKIP=true" >> $GITHUB_ENV
            echo "${platform} wheels already exists."
          else
            echo "SKIP=false" >> $GITHUB_ENV
            echo "${platform} wheels not found, continue building"
          fi

          echo "VERSION=${version}" >> $GITHUB_ENV

      - name: Clean workspace
        if: ${{ env.SKIP != 'true' }}
        run: |
          safe-rm -rf * .*

      - name: Download source
        if: ${{ env.SKIP != 'true' }}
        uses: wxpppp/sources@main
        with:
          name: pillow
          version: ${{ env.VERSION }}

      - name: Build wheel
        if: ${{ env.SKIP != 'true' }}
        run: |
          pip3 install --force-reinstall --no-cache cibuildwheel==3.0.0
          cibuildwheel
        env:
          PIP_INDEX_URL: "https://lpypi.loongnix.cn/loongson/pypi/+simple"
          CIBW_ARCHS: "loongarch64"
          CIBW_BUILD: "*-${{ matrix.platform }}_loongarch64"
          CIBW_BEFORE_ALL_LINUX: |
            set -eux && \
            (command -v apk && apk add tiff-dev jpeg-dev openjpeg-dev zlib-dev freetype-dev lcms2-dev libwebp-dev tcl-dev tk-dev harfbuzz-dev fribidi-dev libimagequant-dev libxcb-dev libpng-dev) || true && \
            (command -v dnf && dnf install -y libtiff-devel libjpeg-devel openjpeg2-devel zlib-devel freetype-devel lcms2-devel libwebp-devel tcl-devel tk-devel harfbuzz-devel fribidi-devel libraqm-devel libimagequant-devel libxcb-devel) || true
          CIBW_TEST_SKIP: "*"
          CIBW_ENVIRONMENT_PASS_LINUX: |
            PIP_INDEX_URL

      - name: Upload wheels
        if: ${{ env.SKIP != 'true' }}
        run: |
          ls wheelhouse/*-${{ matrix.platform }}_*.whl || exit 1
          twine upload --repository-url https://lpypi.loongnix.cn/loongson/pypi wheelhouse/*-${{ matrix.platform }}_*.whl
        env:
          TWINE_USERNAME: ${{ secrets.INDEX_NAME  }}
          TWINE_PASSWORD: ${{ secrets.INDEX_TOKEN }}
